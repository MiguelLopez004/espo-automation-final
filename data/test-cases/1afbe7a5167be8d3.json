{"uid":"1afbe7a5167be8d3","name":"test_edit_contact_phoneNumber_invalid","fullName":"test.Contactos.test_edit_contact#test_edit_contact_phoneNumber_invalid","historyId":"f3cc042a36eb0ec7e88a9e46e0780a68","time":{"start":1728476390794,"stop":1728476391201,"duration":407},"status":"skipped","statusMessage":"XFAIL This test case is expected to fail due to known issue.\n\nFailed: JSON schema validation failed: 'id' is a required property\n\nFailed validating 'required' in schema:\n    {'type': 'object',\n     'properties': {'id': {'type': 'string'},\n                    'name': {'type': 'string'},\n                    'deleted': {'type': 'boolean'},\n                    'salutationName': {'type': ['string', 'null']},\n                    'firstName': {'type': ['string', 'null']},\n                    'lastName': {'type': 'string'},\n                    'title': {'type': ['string', 'null']},\n                    'description': {'type': ['string', 'null']},\n                    'emailAddress': {'type': ['string', 'null']},\n                    'phoneNumber': {'type': ['string', 'null']},\n                    'doNotCall': {'type': 'boolean'},\n                    'addressStreet': {'type': ['string', 'null']},\n                    'addressCity': {'type': ['string', 'null']},\n                    'addressState': {'type': ['string', 'null']},\n                    'addressCountry': {'type': ['string', 'null']},\n                    'addressPostalCode': {'type': ['string', 'null']},\n                    'accountIsInactive': {'type': ['boolean', 'null']},\n                    'accountType': {'type': ['string', 'null']},\n                    'createdAt': {'type': 'string'},\n                    'modifiedAt': {'type': 'string'},\n                    'hasPortalUser': {'type': 'boolean'},\n                    'middleName': {'type': ['string', 'null']},\n                    'emailAddressIsOptedOut': {'type': ['boolean', 'null']},\n                    'emailAddressIsInvalid': {'type': ['boolean', 'null']},\n                    'phoneNumberIsOptedOut': {'type': ['boolean', 'null']},\n                    'phoneNumberIsInvalid': {'type': ['boolean', 'null']},\n                    'emailAddressData': {'type': 'array',\n                                         'items': {'type': 'object'}},\n                    'phoneNumberData': {'type': 'array',\n                                        'items': {'type': 'object'}},\n                    'accountId': {'type': ['string', 'null']},\n                    'accountName': {'type': ['string', 'null']},\n                    'accountsIds': {'type': 'array',\n                                    'items': {'type': 'string'}},\n                    'accountsNames': {'type': 'object'},\n                    'accountsColumns': {'type': 'object'},\n                    'campaignId': {'type': ['string', 'null']},\n                    'campaignName': {'type': ['string', 'null']},\n                    'createdById': {'type': 'string'},\n                    'createdByName': {'type': 'string'},\n                    'modifiedById': {'type': ['string', 'null']},\n                    'modifiedByName': {'type': ['string', 'null']},\n                    'assignedUserId': {'type': ['string', 'null']},\n                    'assignedUserName': {'type': ['string', 'null']},\n                    'teamsIds': {'type': 'array',\n                                 'items': {'type': 'string'}},\n                    'teamsNames': {'type': 'object'},\n                    'portalUserId': {'type': ['string', 'null']},\n                    'portalUserName': {'type': ['string', 'null']},\n                    'originalLeadId': {'type': ['string', 'null']},\n                    'originalLeadName': {'type': ['string', 'null']},\n                    'isFollowed': {'type': 'boolean'},\n                    'followersIds': {'type': 'array',\n                                     'items': {'type': 'string'}},\n                    'followersNames': {'type': 'object'}},\n     'required': ['id',\n                  'name',\n                  'deleted',\n                  'lastName',\n                  'doNotCall',\n                  'createdAt',\n                  'modifiedAt',\n                  'hasPortalUser',\n                  'emailAddressData',\n                  'phoneNumberData',\n                  'accountsIds',\n                  'accountsNames',\n                  'accountsColumns',\n                  'createdById',\n                  'createdByName',\n                  'isFollowed',\n                  'followersIds',\n                  'followersNames']}\n\nOn instance:\n    {'messageTranslation': {'label': 'validationFailure',\n                            'scope': None,\n                            'data': {'field': 'phoneNumber',\n                                     'type': 'valid'}}}","statusTrace":"response = {'messageTranslation': {'data': {'field': 'phoneNumber', 'type': 'valid'}, 'label': 'validationFailure', 'scope': None}}\nschema_file = 'edit_contact_schema.json'\n\n    @staticmethod\n    def validate_json_schema(response, schema_file):\n        try:\n            schema = load_schema_resource(schema_file)\n        except FileNotFoundError:\n            pytest.fail(f\"Schema file '{schema_file}' not found\")\n        except json.JSONDecodeError as err:\n            pytest.fail(f\"Failed to decode JSON schema: {err}\")\n    \n        try:\n>           jsonschema.validate(instance=response, schema=schema)\n\nsrc/assertions/schema_assertions.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ninstance = {'messageTranslation': {'data': {'field': 'phoneNumber', 'type': 'valid'}, 'label': 'validationFailure', 'scope': None}}\nschema = {'properties': {'accountId': {'type': ['string', 'null']}, 'accountIsInactive': {'type': ['boolean', 'null']}, 'accoun...g', 'null']}, ...}, 'required': ['id', 'name', 'deleted', 'lastName', 'doNotCall', 'createdAt', ...], 'type': 'object'}\ncls = <class 'jsonschema.validators.Draft202012Validator'>, args = ()\nkwargs = {}\nvalidator = Draft202012Validator(schema={'properties': {'accountId': {'type': ['string', 'null']}, 'accountIsInactive': {'type': [...equired': ['id', 'name', 'deleted', 'lastName', 'doNotCall', 'createdAt', ...], 'type': 'object'}, format_checker=None)\nerror = <ValidationError: \"'id' is a required property\">\n\n    def validate(instance, schema, cls=None, *args, **kwargs):  # noqa: D417\n        \"\"\"\n        Validate an instance under the given schema.\n    \n            >>> validate([2, 3, 4], {\"maxItems\": 2})\n            Traceback (most recent call last):\n                ...\n            ValidationError: [2, 3, 4] is too long\n    \n        :func:`~jsonschema.validators.validate` will first verify that the\n        provided schema is itself valid, since not doing so can lead to less\n        obvious error messages and fail in less obvious or consistent ways.\n    \n        If you know you have a valid schema already, especially\n        if you intend to validate multiple instances with\n        the same schema, you likely would prefer using the\n        `jsonschema.protocols.Validator.validate` method directly on a\n        specific validator (e.g. ``Draft202012Validator.validate``).\n    \n    \n        Arguments:\n    \n            instance:\n    \n                The instance to validate\n    \n            schema:\n    \n                The schema to validate with\n    \n            cls (jsonschema.protocols.Validator):\n    \n                The class that will be used to validate the instance.\n    \n        If the ``cls`` argument is not provided, two things will happen\n        in accordance with the specification. First, if the schema has a\n        :kw:`$schema` keyword containing a known meta-schema [#]_ then the\n        proper validator will be used. The specification recommends that\n        all schemas contain :kw:`$schema` properties for this reason. If no\n        :kw:`$schema` property is found, the default validator class is the\n        latest released draft.\n    \n        Any other provided positional and keyword arguments will be passed\n        on when instantiating the ``cls``.\n    \n        Raises:\n    \n            `jsonschema.exceptions.ValidationError`:\n    \n                if the instance is invalid\n    \n            `jsonschema.exceptions.SchemaError`:\n    \n                if the schema itself is invalid\n    \n        .. rubric:: Footnotes\n        .. [#] known by a validator registered with\n            `jsonschema.validators.validates`\n    \n        \"\"\"\n        if cls is None:\n            cls = validator_for(schema)\n    \n        cls.check_schema(schema)\n        validator = cls(schema, *args, **kwargs)\n        error = exceptions.best_match(validator.iter_errors(instance))\n        if error is not None:\n>           raise error\nE           jsonschema.exceptions.ValidationError: 'id' is a required property\nE           \nE           Failed validating 'required' in schema:\nE               {'type': 'object',\nE                'properties': {'id': {'type': 'string'},\nE                               'name': {'type': 'string'},\nE                               'deleted': {'type': 'boolean'},\nE                               'salutationName': {'type': ['string', 'null']},\nE                               'firstName': {'type': ['string', 'null']},\nE                               'lastName': {'type': 'string'},\nE                               'title': {'type': ['string', 'null']},\nE                               'description': {'type': ['string', 'null']},\nE                               'emailAddress': {'type': ['string', 'null']},\nE                               'phoneNumber': {'type': ['string', 'null']},\nE                               'doNotCall': {'type': 'boolean'},\nE                               'addressStreet': {'type': ['string', 'null']},\nE                               'addressCity': {'type': ['string', 'null']},\nE                               'addressState': {'type': ['string', 'null']},\nE                               'addressCountry': {'type': ['string', 'null']},\nE                               'addressPostalCode': {'type': ['string', 'null']},\nE                               'accountIsInactive': {'type': ['boolean', 'null']},\nE                               'accountType': {'type': ['string', 'null']},\nE                               'createdAt': {'type': 'string'},\nE                               'modifiedAt': {'type': 'string'},\nE                               'hasPortalUser': {'type': 'boolean'},\nE                               'middleName': {'type': ['string', 'null']},\nE                               'emailAddressIsOptedOut': {'type': ['boolean', 'null']},\nE                               'emailAddressIsInvalid': {'type': ['boolean', 'null']},\nE                               'phoneNumberIsOptedOut': {'type': ['boolean', 'null']},\nE                               'phoneNumberIsInvalid': {'type': ['boolean', 'null']},\nE                               'emailAddressData': {'type': 'array',\nE                                                    'items': {'type': 'object'}},\nE                               'phoneNumberData': {'type': 'array',\nE                                                   'items': {'type': 'object'}},\nE                               'accountId': {'type': ['string', 'null']},\nE                               'accountName': {'type': ['string', 'null']},\nE                               'accountsIds': {'type': 'array',\nE                                               'items': {'type': 'string'}},\nE                               'accountsNames': {'type': 'object'},\nE                               'accountsColumns': {'type': 'object'},\nE                               'campaignId': {'type': ['string', 'null']},\nE                               'campaignName': {'type': ['string', 'null']},\nE                               'createdById': {'type': 'string'},\nE                               'createdByName': {'type': 'string'},\nE                               'modifiedById': {'type': ['string', 'null']},\nE                               'modifiedByName': {'type': ['string', 'null']},\nE                               'assignedUserId': {'type': ['string', 'null']},\nE                               'assignedUserName': {'type': ['string', 'null']},\nE                               'teamsIds': {'type': 'array',\nE                                            'items': {'type': 'string'}},\nE                               'teamsNames': {'type': 'object'},\nE                               'portalUserId': {'type': ['string', 'null']},\nE                               'portalUserName': {'type': ['string', 'null']},\nE                               'originalLeadId': {'type': ['string', 'null']},\nE                               'originalLeadName': {'type': ['string', 'null']},\nE                               'isFollowed': {'type': 'boolean'},\nE                               'followersIds': {'type': 'array',\nE                                                'items': {'type': 'string'}},\nE                               'followersNames': {'type': 'object'}},\nE                'required': ['id',\nE                             'name',\nE                             'deleted',\nE                             'lastName',\nE                             'doNotCall',\nE                             'createdAt',\nE                             'modifiedAt',\nE                             'hasPortalUser',\nE                             'emailAddressData',\nE                             'phoneNumberData',\nE                             'accountsIds',\nE                             'accountsNames',\nE                             'accountsColumns',\nE                             'createdById',\nE                             'createdByName',\nE                             'isFollowed',\nE                             'followersIds',\nE                             'followersNames']}\nE           \nE           On instance:\nE               {'messageTranslation': {'label': 'validationFailure',\nE                                       'scope': None,\nE                                       'data': {'field': 'phoneNumber',\nE                                                'type': 'valid'}}}\n\n/opt/hostedtoolcache/Python/3.10.15/x64/lib/python3.10/site-packages/jsonschema/validators.py:1332: ValidationError\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_edit_contact = ({'Espo-Authorization': 'YWRtaW46NjI0MjkyNTU=', 'X-Api-Key': 'f542db99f09e823eeb14cd558f104fef'}, {'accountIsInactive': None, 'accountName': None, 'accountsColumns': {}, 'accountsIds': [], ...})\n\n    @pytest.mark.regression\n    @pytest.mark.functional\n    @pytest.mark.xfail(reason=\"This test case is expected to fail due to known issue.\", condition=True)\n    def test_edit_contact_phoneNumber_invalid(setup_edit_contact):\n        headers, contact = setup_edit_contact\n        data = create_contact_data(salutationName=\"Ms.\", firstName=\"Mike\",\n                                                             lastName=\"Towel\",\n                                                             emailAddress=\"one@on.as\",\n                                                             phoneNumber=\"+17945sdfsd654564\",\n                                                             addressPostalCode=\"0000\", addressStreet=\"none\",\n                                                             addressState=\"none\", addressCity=\"none\", addressCountry=\"none\",\n                                                             description=\"prueba\")\n        response = EspocrmRequest().put(EndpointContacts.view(contact['id']), headers, data)\n        AssertionStatusCode().assert_status_code_400(response)\n>       AssertionContacts().assert_edit_contact_schema_schema_file(response.json())\n\ntest/Contactos/test_edit_contact.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/assertions/contacts_assertions.py:60: in assert_edit_contact_schema_schema_file\n    return AssertionSchemas().validate_json_schema(payload, \"edit_contact_schema.json\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'messageTranslation': {'data': {'field': 'phoneNumber', 'type': 'valid'}, 'label': 'validationFailure', 'scope': None}}\nschema_file = 'edit_contact_schema.json'\n\n    @staticmethod\n    def validate_json_schema(response, schema_file):\n        try:\n            schema = load_schema_resource(schema_file)\n        except FileNotFoundError:\n            pytest.fail(f\"Schema file '{schema_file}' not found\")\n        except json.JSONDecodeError as err:\n            pytest.fail(f\"Failed to decode JSON schema: {err}\")\n    \n        try:\n            jsonschema.validate(instance=response, schema=schema)\n            return True\n        except jsonschema.exceptions.ValidationError as err:\n>           pytest.fail(f\"JSON schema validation failed: {err}\")\nE           Failed: JSON schema validation failed: 'id' is a required property\nE           \nE           Failed validating 'required' in schema:\nE               {'type': 'object',\nE                'properties': {'id': {'type': 'string'},\nE                               'name': {'type': 'string'},\nE                               'deleted': {'type': 'boolean'},\nE                               'salutationName': {'type': ['string', 'null']},\nE                               'firstName': {'type': ['string', 'null']},\nE                               'lastName': {'type': 'string'},\nE                               'title': {'type': ['string', 'null']},\nE                               'description': {'type': ['string', 'null']},\nE                               'emailAddress': {'type': ['string', 'null']},\nE                               'phoneNumber': {'type': ['string', 'null']},\nE                               'doNotCall': {'type': 'boolean'},\nE                               'addressStreet': {'type': ['string', 'null']},\nE                               'addressCity': {'type': ['string', 'null']},\nE                               'addressState': {'type': ['string', 'null']},\nE                               'addressCountry': {'type': ['string', 'null']},\nE                               'addressPostalCode': {'type': ['string', 'null']},\nE                               'accountIsInactive': {'type': ['boolean', 'null']},\nE                               'accountType': {'type': ['string', 'null']},\nE                               'createdAt': {'type': 'string'},\nE                               'modifiedAt': {'type': 'string'},\nE                               'hasPortalUser': {'type': 'boolean'},\nE                               'middleName': {'type': ['string', 'null']},\nE                               'emailAddressIsOptedOut': {'type': ['boolean', 'null']},\nE                               'emailAddressIsInvalid': {'type': ['boolean', 'null']},\nE                               'phoneNumberIsOptedOut': {'type': ['boolean', 'null']},\nE                               'phoneNumberIsInvalid': {'type': ['boolean', 'null']},\nE                               'emailAddressData': {'type': 'array',\nE                                                    'items': {'type': 'object'}},\nE                               'phoneNumberData': {'type': 'array',\nE                                                   'items': {'type': 'object'}},\nE                               'accountId': {'type': ['string', 'null']},\nE                               'accountName': {'type': ['string', 'null']},\nE                               'accountsIds': {'type': 'array',\nE                                               'items': {'type': 'string'}},\nE                               'accountsNames': {'type': 'object'},\nE                               'accountsColumns': {'type': 'object'},\nE                               'campaignId': {'type': ['string', 'null']},\nE                               'campaignName': {'type': ['string', 'null']},\nE                               'createdById': {'type': 'string'},\nE                               'createdByName': {'type': 'string'},\nE                               'modifiedById': {'type': ['string', 'null']},\nE                               'modifiedByName': {'type': ['string', 'null']},\nE                               'assignedUserId': {'type': ['string', 'null']},\nE                               'assignedUserName': {'type': ['string', 'null']},\nE                               'teamsIds': {'type': 'array',\nE                                            'items': {'type': 'string'}},\nE                               'teamsNames': {'type': 'object'},\nE                               'portalUserId': {'type': ['string', 'null']},\nE                               'portalUserName': {'type': ['string', 'null']},\nE                               'originalLeadId': {'type': ['string', 'null']},\nE                               'originalLeadName': {'type': ['string', 'null']},\nE                               'isFollowed': {'type': 'boolean'},\nE                               'followersIds': {'type': 'array',\nE                                                'items': {'type': 'string'}},\nE                               'followersNames': {'type': 'object'}},\nE                'required': ['id',\nE                             'name',\nE                             'deleted',\nE                             'lastName',\nE                             'doNotCall',\nE                             'createdAt',\nE                             'modifiedAt',\nE                             'hasPortalUser',\nE                             'emailAddressData',\nE                             'phoneNumberData',\nE                             'accountsIds',\nE                             'accountsNames',\nE                             'accountsColumns',\nE                             'createdById',\nE                             'createdByName',\nE                             'isFollowed',\nE                             'followersIds',\nE                             'followersNames']}\nE           \nE           On instance:\nE               {'messageTranslation': {'label': 'validationFailure',\nE                                       'scope': None,\nE                                       'data': {'field': 'phoneNumber',\nE                                                'type': 'valid'}}}\n\nsrc/assertions/schema_assertions.py:21: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1728476373888,"stop":1728476373889,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"get_headers","time":{"start":1728476373889,"stop":1728476373889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_edit_contact","time":{"start":1728476390397,"stop":1728476390793,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"setup_edit_contact::0","time":{"start":1728476391225,"stop":1728476391639,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)"},{"name":"tag","value":"functional"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"test.Contactos"},{"name":"suite","value":"test_edit_contact"},{"name":"host","value":"fv-az714-225"},{"name":"thread","value":"2104-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.Contactos.test_edit_contact"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["functional","regression","@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)"]},"source":"1afbe7a5167be8d3.json","parameterValues":[]}