{"uid":"4ddd8ef2c0cd5a56","name":"test_add_account_billingAddress_null","fullName":"test.Cuentas.test_add_account#test_add_account_billingAddress_null","historyId":"69c5ab84c5504c6c799ac32cc809915c","time":{"start":1726762598911,"stop":1726762599295,"duration":384},"status":"failed","statusMessage":"AssertionError","statusTrace":"setup_add_account = ({'Espo-Authorization': 'YWRtaW46ODAwNDkwNTM=', 'X-Api-Key': '4c29fe9482f3bccb7ac0a7d04015a2e7'}, [])\n\n    @pytest.mark.regression\n    @pytest.mark.functional\n    def test_add_account_billingAddress_null(setup_add_account):\n        headers, created_accounts = setup_add_account\n        payload_account = PayloadAccount().build_payload_add_account(name=\"prueba nueva\",\n                                                                     description=\"prueba\", emailAddress=\"prueba@prueba.com\",\n                                                                     industry=\"Architecture\", phoneNumber=\"+15555555555\",\n                                                                     shippingAddressCity=\"prueba\",\n                                                                     shippingAddressCountry=\"prueba\",\n                                                                     shippingAddressPostalCode=\"prueba\",\n                                                                     shippingAddressState=\"prueba\",\n                                                                     shippingAddressStreet=\"prueba\", type=\"Customer\",\n                                                                     website=\"prueba.com\")\n        response = EspocrmRequest().post(EndpointAccount.account(), headers, payload_account)\n>       AssertionStatusCode().assert_status_code_200(response)\n\ntest/Cuentas/test_add_account.py:117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [409]>\n\n    @staticmethod\n    def assert_status_code_200(response):\n>       assert response.status_code == 200\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:11: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1726762578414,"stop":1726762578414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_add_account","time":{"start":1726762598910,"stop":1726762598910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"setup_add_account::0","time":{"start":1726762599300,"stop":1726762599300,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"functional"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"test.Cuentas"},{"name":"suite","value":"test_add_account"},{"name":"host","value":"fv-az1269-365"},{"name":"thread","value":"2173-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.Cuentas.test_add_account"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression"]},"source":"4ddd8ef2c0cd5a56.json","parameterValues":[]}