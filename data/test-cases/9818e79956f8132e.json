{"uid":"9818e79956f8132e","name":"test_add_contact_with_valid_user","fullName":"test.Contactos.test_add_contact#test_add_contact_with_valid_user","historyId":"b3a51f40dc649dc94fca3af1a2010d27","time":{"start":1726764907983,"stop":1726764908303,"duration":320},"status":"failed","statusMessage":"AssertionError","statusTrace":"setup_add_contact = ({'Espo-Authorization': 'YWRtaW46ODAwNDkwNTM=', 'X-Api-Key': '4c29fe9482f3bccb7ac0a7d04015a2e7'}, [])\n\n    @pytest.mark.smoke\n    @pytest.mark.functional\n    def test_add_contact_with_valid_user(setup_add_contact):\n        headers, created_contacts = setup_add_contact\n        payload = PayloadContact().build_payload_add_contact(salutationName=\"Ms.\", firstName=\"Mike\",\n                                                             lastName=\"Towel\",\n                                                             name=\"Mike Towel\", emailAddress=\"one@on.as\",\n                                                             phoneNumber=\"+17945654564\",\n                                                             addressPostalCode=\"0000\", addressStreet=\"none\",\n                                                             addressState=\"none\", addressCity=\"none\", addressCountry=\"none\",\n                                                             description=\"prueba\")\n        response = EspocrmRequest().post(EndpointContacts.contact(), headers, payload)\n>       AssertionStatusCode().assert_status_code_200(response)\n\ntest/Contactos/test_add_contact.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [409]>\n\n    @staticmethod\n    def assert_status_code_200(response):\n>       assert response.status_code == 200\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:11: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1726764904676,"stop":1726764904676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_add_contact","time":{"start":1726764907982,"stop":1726764907982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"setup_add_contact::0","time":{"start":1726764908308,"stop":1726764908308,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"functional"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"test.Contactos"},{"name":"suite","value":"test_add_contact"},{"name":"host","value":"fv-az1149-288"},{"name":"thread","value":"2094-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.Contactos.test_add_contact"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","smoke"]},"source":"9818e79956f8132e.json","parameterValues":[]}